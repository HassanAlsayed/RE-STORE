// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RESTORE.Data;

#nullable disable

namespace RESTORE.Migrations
{
    [DbContext(typeof(ReStoreDbContext))]
    partial class ReStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RESTORE.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5db8fd3d-248c-4a7c-8da4-27cc24fc3350"),
                            Brand = "Brand",
                            Description = "Description 1",
                            Name = "Product 1",
                            PictureUrl = "url_to_image_1.jpg",
                            Price = 100L,
                            QuantityInStock = 10,
                            Type = "Type"
                        },
                        new
                        {
                            Id = new Guid("883a15ea-cbd4-4efe-bc15-908ab077e599"),
                            Brand = "Brand",
                            Description = "Description 2",
                            Name = "Product 2",
                            PictureUrl = "url_to_image_2.jpg",
                            Price = 200L,
                            QuantityInStock = 20,
                            Type = "Type"
                        },
                        new
                        {
                            Id = new Guid("2556d6fb-7ea0-407a-8b9a-51690113ba6c"),
                            Brand = "Brand",
                            Description = "Description 3",
                            Name = "Product 3",
                            PictureUrl = "url_to_image_3.jpg",
                            Price = 300L,
                            QuantityInStock = 30,
                            Type = "Type"
                        },
                        new
                        {
                            Id = new Guid("6e3ddce5-3cd1-4c73-a028-8df0588f1c68"),
                            Brand = "Brand",
                            Description = "Description 4",
                            Name = "Product 4",
                            PictureUrl = "url_to_image_4.jpg",
                            Price = 400L,
                            QuantityInStock = 40,
                            Type = "Type"
                        },
                        new
                        {
                            Id = new Guid("620161cc-d4d5-48cd-b093-a505adef64ad"),
                            Brand = "Brand",
                            Description = "Description 5",
                            Name = "Product 5",
                            PictureUrl = "url_to_image_5.jpg",
                            Price = 500L,
                            QuantityInStock = 50,
                            Type = "Type"
                        },
                        new
                        {
                            Id = new Guid("91d8e846-930a-4a01-a85d-7c9d112e7e12"),
                            Brand = "Brand",
                            Description = "Description 6",
                            Name = "Product 6",
                            PictureUrl = "url_to_image_6.jpg",
                            Price = 600L,
                            QuantityInStock = 60,
                            Type = "Type"
                        },
                        new
                        {
                            Id = new Guid("4468d6e5-ca7d-4061-8b99-0768aeb78add"),
                            Brand = "Brand",
                            Description = "Description 7",
                            Name = "Product 7",
                            PictureUrl = "url_to_image_7.jpg",
                            Price = 700L,
                            QuantityInStock = 70,
                            Type = "Type"
                        },
                        new
                        {
                            Id = new Guid("f0782b2d-dd6a-4f59-871c-c4863893e8e3"),
                            Brand = "Brand",
                            Description = "Description 8",
                            Name = "Product 8",
                            PictureUrl = "url_to_image_8.jpg",
                            Price = 800L,
                            QuantityInStock = 80,
                            Type = "Type"
                        },
                        new
                        {
                            Id = new Guid("ba5fffcc-da47-4e88-86fd-ee0e3953561e"),
                            Brand = "Brand",
                            Description = "Description 9",
                            Name = "Product 9",
                            PictureUrl = "url_to_image_9.jpg",
                            Price = 900L,
                            QuantityInStock = 90,
                            Type = "Type"
                        },
                        new
                        {
                            Id = new Guid("e082e5f2-fd0d-4f02-b23c-cb234834a072"),
                            Brand = "Brand",
                            Description = "Description 10",
                            Name = "Product 10",
                            PictureUrl = "url_to_image_10.jpg",
                            Price = 1000L,
                            QuantityInStock = 100,
                            Type = "Type"
                        });
                });

            modelBuilder.Entity("RESTORE.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
